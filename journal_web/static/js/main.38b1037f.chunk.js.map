{"version":3,"sources":["images/bg-2.jpg","containers/JournalTable.js","pages/UserPage.js","pages/NewJournal.js","containers/login.js","containers/signup.js","containers/navbar.js","pages/UpdateJournal.js","pages/Homepage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","JournalTable","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","journals","_this2","token","localStorage","getItem","axios","method","url","headers","Authorization","concat","data","user_id","then","response","status","setState","console","log","catch","error","react_default","a","createElement","Row","id","map","journal","Col","key","className","src","image_path","alt","react_router_dom","to","title","created_at","React","Component","UserPage","Content-Type","Fragment","JournalTable_JournalTable","NewJournal","props","handleInput","event","defineProperty","target","value","handleFile","file","files","URL","createObjectURL","handleSubmit","_this$state","content","fd","FormData","set","append","name","post","redirect","window","location","href","bind","assertThisInitialized","_this$state2","lib","onValidSubmit","encType","placeholder","onChange","type","validate","required","errorMessage","maxLength","for","Button","light","color","form","Login","email","password","setItem","user","_this$props","loginModal","toggleLoginModal","toggleSignupModal","Modal","isOpen","toggle","ModalHeader","ModalBody","label","autoComplete","ModalFooter","onClick","outline","Signup","firstName","lastName","confirmPassword","signupModal","pattern","minLength","match","myNavbar","handleLogout","clear","isLoggedIn","Navbar","NavbarBrand","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","signup_Signup","login","JournalEntry","handleUpdate","params","handleDestroy","updated_at","htmlFor","Homepage","Container","wallpaper","App","react_router","path","exact","component","UpdateJournal","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.38b1037f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/bg-2.e30f1067.jpg\";","import React from \"react\";\nimport { Link } from 'react-router-dom';\nimport { Col, Row } from 'reactstrap';\nimport axios from 'axios'\n\nexport default class JournalTable extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            journals: [],\n        };\n    }\n\n    componentDidMount() {\n        const token = localStorage.getItem('token')\n        axios({\n            method: 'get',\n            url: 'https://journal-nyx.herokuapp.com/api/v1/journals/',\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n            data: {\n                user_id: localStorage.getItem('userId'),\n            }\n        }).then(response => {\n            if (response.data.status === \"success\") {\n                this.setState({\n                    journals: response.data.journals\n                })\n            } else {\n                console.log('Could not retrieve journals. Please check authorization.');\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    render() {\n        return (\n            <Row id=\"journal-grid\">\n                {this.state.journals.map((journal) => (\n                    <Col key={journal.id} className=\"col-sm-3 d-inline\">\n                        <img src={'https://s3.amazonaws.com/journal-nyx/' + journal.image_path} alt=\"\" className=\"img-thumbnail journal-img\" />\n                        <p><Link to={\"/journals/\" + journal.id}>{journal.title}</Link></p>\n                        <p className=\"journal-created-at\">{journal.created_at}</p>\n                    </Col>\n                ))}\n            </Row>\n        )\n    }\n}","import axios from 'axios'\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport JournalTable from '../containers/JournalTable.js';\n\nclass UserPage extends React.Component {\n    componentDidMount() {\n        const token = localStorage.getItem('token')\n        axios({\n            method: 'get',\n            url: 'https://journal-nyx.herokuapp.com/api/v1/journals/',\n            headers: {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`,\n            },\n            data: {\n                user_id: localStorage.getItem('userId'),\n            }\n        }).then(response => {\n            if (response.data.status === \"success\") {\n                this.setState({\n                    journals: response.data.journals\n                })\n            } else {\n                console.log('Could not retrieve journals. Please check authorization.');\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <div>\n                    <div className=\"w-100\">\n                        <div className=\"col-md-6 d-inline-block\">\n                            <h2 id=\"welcome-message\">Welcome, {localStorage.getItem('firstName')}</h2>\n                        </div>\n                        <Link to=\"/journals/new\" className=\"btn btn-outline-secondary col-md-4 float-right\" id=\"new-journal-button\">Write a new journal</Link>\n                    </div>\n                </div>\n                <div>\n                    <JournalTable />\n                </div>\n            </>\n        )\n    }\n}\n\nexport default UserPage;","import React from 'react';\nimport axios from 'axios';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { Button } from 'reactstrap';\n\nclass NewJournal extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            content: '',\n            file: null,\n            url: null,\n        };\n        this.handleInput = this.handleInput.bind(this)\n        this.handleFile = this.handleFile.bind(this)\n    }\n\n    handleInput = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n\n    handleFile = (event) => {\n        this.setState({\n            file: event.target.files[0],\n            url: URL.createObjectURL(event.target.files[0]),\n        })\n    }\n\n    handleSubmit = (event) => {\n        const { title, content, file } = this.state\n        const fd = new FormData()\n        fd.set('user_id', localStorage.getItem('userId'))\n        fd.set('title', title)\n        fd.set('content', content)\n        fd.append('file', file, file.name)\n\n        const token = localStorage.getItem('token')\n        axios.post('https://journal-nyx.herokuapp.com/api/v1/journals/new', fd, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }).then((response) => {\n            if (response.data.status === \"success\") {\n                if (response.data.redirect) {\n                    window.location.href = response.data.redirect;\n                }\n                // On success, display success message\n                console.log('Journal created!')\n            } else {\n                // On response but email validation failure, display error message\n                console.log('Uh oh! Your journal entry could not be created')\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    render() {\n        const { title, content, file, url } = this.state\n        return (\n            <>\n                <AvForm onValidSubmit={this.handleSubmit} id=\"journal\" encType=\"multipart/form-data\">\n                    <AvField placeholder=\"Title\" name=\"title\" value={title} onChange={this.handleInput} id=\"title\" type=\"text\" validate={{\n                        required: { value: true, errorMessage: 'Please give your journal a title' },\n                        maxLength: { value: 255, errorMessage: 'Your title cannot exceed 255 characters' }\n                    }} />\n                    <textarea placeholder=\"Write away...\" name=\"content\" value={content} onChange={this.handleInput} id=\"content\" type=\"text\" className=\"form-control\"></textarea><br />\n                    <div className=\"input-group col-sm-6\">\n                        <input type=\"file\" className=\"custom-file-input\" id=\"file\" onChange={this.handleFile} />\n                        <label className=\"custom-file-label\" for=\"file\">{(file) ? file.name : \"Choose an image\"}</label>\n                    </div>\n                    <br />\n                    <img src={url} alt=\"\" className=\"img-thumbnail\" />\n                    <br /><br />\n                    <Button light color=\"secondary\" form=\"journal\" type=\"submit\" className=\"float-right\">Create new journal entry</Button>\n                </AvForm>\n            </>\n        );\n    }\n}\n\nexport default NewJournal","import React from \"react\";\nimport { Modal, ModalHeader, ModalBody, ModalFooter, Button } from \"reactstrap\";\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport axios from \"axios\";\n\nclass Login extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: '',\n            password: '',\n        }\n        this.handleInput = this.handleInput.bind(this)\n    }\n\n    handleInput = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n\n    handleSubmit = () => {\n        axios({\n            method: 'post',\n            url: 'https://journal-nyx.herokuapp.com/api/v1/sessions/',\n            data: {\n                email: this.state.email,\n                password: this.state.password,\n            }\n        }).then((response) => {\n            if (response.data.status === \"success\") {\n                // Redirect to user's journals page\n                if (response.data.redirect) {\n                    window.location.href = response.data.redirect;\n                }\n\n                // On success, display success message\n                console.log('Log in successful!')\n\n                // Save auth token and user details into local storage\n                localStorage.setItem('token', response.data['auth_token']);\n                localStorage.setItem('userId', response.data.user['id']);\n                localStorage.setItem('firstName', response.data.user['first_name']);\n            } else {\n                console.log('Uh oh! Your email and password does not match.')\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    render() {\n        const { loginModal, toggleLoginModal, toggleSignupModal } = this.props\n        const { email, password } = this.state\n        return (\n            <Modal isOpen={loginModal} toggle={toggleLoginModal}>\n                <ModalHeader>Log in to your Journal</ModalHeader>\n                <ModalBody>\n                    <AvForm onValidSubmit={this.handleSubmit} id=\"login\">\n                        <AvField name=\"email\" label=\"Email: \" value={email} onChange={this.handleInput} id=\"email\" type=\"email\" autoComplete=\"email\" validate={{\n                            required: { value: true, errorMessage: 'Please enter a valid email' }\n                        }} />\n                        <AvField name=\"password\" label=\"Password: \" value={password} onChange={this.handleInput} id=\"password\" type=\"password\" autoComplete=\"password\" validate={{\n                            required: { value: true, errorMessage: 'Please enter your password' }\n                        }} />\n                    </AvForm>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"light\" onClick={toggleSignupModal}>Sign up here if you don't have an account</Button>\n                    <Button outline color=\"secondary\" form=\"login\" type=\"submit\">Log in</Button>\n                </ModalFooter>\n            </Modal>\n\n        )\n    }\n}\n\nexport default Login","import React from 'react';\nimport axios from 'axios';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\n\nexport default class Signup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n        }\n        this.handleInput = this.handleInput.bind(this)\n    }\n\n    handleInput = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n\n    handleSubmit = () => {\n        axios({\n            method: 'post',\n            url: 'https://journal-nyx.herokuapp.com/api/v1/users/new',\n            data: {\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                email: this.state.email,\n                password: this.state.password,\n            }\n        }).then(response => {\n            if (response.data.status === \"success\") {\n                // Redirect to user's journals page\n                if (response.data.redirect) {\n                    window.location.href = response.data.redirect;\n                }\n\n                // On success, display success message\n                console.log('Registration was successful')\n\n                // Save auth token and user details into local storage\n                localStorage.setItem('token', response.data['auth_token']);\n                localStorage.setItem('userId', response.data.user['id']);\n                localStorage.setItem('firstName', response.data.user['first_name']);\n            } else {\n                console.log('An account has already been registered with that email')\n            }\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n\n    render() {\n        const { signupModal, toggleLoginModal, toggleSignupModal } = this.props\n        const { firstName, lastName, email, password, confirmPassword } = this.state\n        return (\n            <Modal isOpen={signupModal} toggle={toggleSignupModal}>\n                <ModalHeader >Sign up for your Journal</ModalHeader>\n                <ModalBody>\n                    <AvForm onValidSubmit={this.handleSubmit} id=\"signup\">\n                        <AvField name=\"firstName\" label=\"First name: \" value={firstName} onChange={this.handleInput} id=\"firstName\" type=\"text\" autoComplete=\"first-name\" validate={{\n                            required: { value: true, errorMessage: 'Please enter your first name' },\n                            pattern: { value: '^[A-Za-z]+$', errorMessage: 'Your name must be composed only with letters' },\n                            minLength: { value: 3, errorMessage: 'Your name must be between 3 and 30 characters' },\n                            maxLength: { value: 30, errorMessage: 'Your name must be between 3 and 30 characters' }\n                        }} />\n                        <AvField name=\"lastName\" label=\"Last name: \" value={lastName} onChange={this.handleInput} id=\"lastName\" type=\"text\" autoComplete=\"last-name\" validate={{\n                            required: { value: true, errorMessage: 'Please enter your last name' },\n                            pattern: { value: '^[A-Za-z]+$', errorMessage: 'Your name must be composed only with letters' },\n                            minLength: { value: 3, errorMessage: 'Your name must be between 3 and 30 characters' },\n                            maxLength: { value: 30, errorMessage: 'Your name must be between 3 and 30 characters' }\n                        }} />\n                        <AvField name=\"email\" label=\"Email: \" value={email} onChange={this.handleInput} id=\"email\" type=\"email\" autoComplete=\"new-emil\" validate={{\n                            required: { value: true, errorMessage: 'Please enter a valid email' }\n                        }} />\n                        <AvField name=\"password\" label=\"Password: \" value={password} onChange={this.handleInput} id=\"password\" type=\"password\" autoComplete=\"new-password\" validate={{\n                            required: { value: true, errorMessage: 'Please enter your password' },\n                            minLength: { value: 6, errorMessage: 'Your password must be between 6 and 20 characters' },\n                            maxLength: { value: 20, errorMessage: 'Your password must be between 6 and 20 characters' }\n                        }} />\n                        <AvField name=\"confirmPassword\" label=\"Confirm password: \" value={confirmPassword} onChange={this.handleInput} id=\"confirmPassword\" type=\"password\" autoComplete=\"confirm-password\" validate={{\n                            required: { value: true, errorMessage: 'Please enter your password again' },\n                            match: { value: 'password', errorMessage: 'Your passwords do not match' }\n                        }} />\n                    </AvForm>\n                </ModalBody>\n                <ModalFooter>\n                    <Button color=\"light\" onClick={toggleLoginModal}>Log in here if you already have an account</Button>\n                    <Button outline color=\"secondary\" form=\"signup\" type=\"submit\">Sign up</Button>\n                </ModalFooter>\n            </Modal>\n        )\n    }\n}","import React from \"react\";\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\nimport Login from \"../containers/login.js\";\nimport Signup from \"../containers/signup.js\";\n\n\nclass myNavbar extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            isOpen: false,\n            loginModal: false,\n            signupModal: false,\n            isLoggedIn: false,\n        };\n    }\n\n    toggle = () => {\n        this.setState({\n            isOpen: !this.state.isOpen\n        });\n    }\n\n    toggleLoginModal = () => {\n        this.setState({\n            loginModal: !this.state.loginModal,\n            signupModal: false,\n        });\n    }\n\n    toggleSignupModal = () => {\n        this.setState({\n            signupModal: !this.state.signupModal,\n            loginModal: false,\n        });\n    }\n\n    handleLogout = () => {\n        localStorage.clear()\n        this.setState({\n            isLoggedIn: false,\n        })\n        window.location.href = 'https://journal-nyx.herokuapp.com/';\n    }\n\n    componentDidMount() {\n        if (localStorage.getItem('token') !== null) {\n            this.setState({\n                isLoggedIn: true,\n            })\n        }\n    }\n\n    render() {\n        const { isOpen, loginModal, signupModal, isLoggedIn } = this.state\n        return (\n            <div>\n                <Navbar className=\"navbar-expand-md navbar-nav navbar-light navbar-brand\" id=\"navbar\">\n                    <NavbarBrand>JOURNAL NYX</NavbarBrand>\n                    <NavbarToggler onClick={this.toggle} />\n                    <Collapse isOpen={isOpen} navbar>\n                        <Nav navbar className=\"ml-auto\">\n                            {\n                                (isLoggedIn) ?\n                                    <>\n                                        <NavItem>\n                                            <NavLink href=\"/journals/\">Home</NavLink>\n                                        </NavItem>\n                                        <NavItem>\n                                            <NavLink onClick={this.handleLogout}>Log out</NavLink>\n                                        </NavItem>\n                                    </>\n                                    :\n                                    <>\n                                        <NavItem>\n                                            <NavLink onClick={this.toggleSignupModal}>Sign up</NavLink>\n                                            <Signup signupModal={signupModal} toggleLoginModal={this.toggleLoginModal} toggleSignupModal={this.toggleSignupModal} />\n                                        </NavItem>\n                                        <NavItem>\n                                            <NavLink onClick={this.toggleLoginModal}>Log In</NavLink>\n                                            <Login loginModal={loginModal} toggleLoginModal={this.toggleLoginModal} toggleSignupModal={this.toggleSignupModal} />\n                                        </NavItem>\n                                    </>\n                            }\n                        </Nav>\n                    </Collapse>\n                </Navbar>\n            </div>\n        )\n    }\n}\n\nexport default myNavbar","import React from 'react';\nimport axios from 'axios';\nimport { AvForm, AvField } from 'availity-reactstrap-validation';\nimport { Button } from 'reactstrap';\n\nexport default class JournalEntry extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: '',\n            created_at: '',\n            updated_at: '',\n            user_id: '',\n            title: '',\n            content: '',\n            file: null,\n            url: null,\n        };\n        this.handleInput = this.handleInput.bind(this)\n        this.handleFile = this.handleFile.bind(this)\n    }\n\n    handleInput = (event) => {\n        this.setState({\n            [event.target.id]: event.target.value\n        })\n    }\n\n    handleFile = (event) => {\n        this.setState({\n            file: event.target.files[0],\n            url: URL.createObjectURL(event.target.files[0]),\n        })\n    }\n\n    handleUpdate = () => {\n        const { title, content, file } = this.state\n        const fd = new FormData()\n        fd.set('title', title)\n        fd.set('content', content)\n\n        if (file != null) {\n            fd.append('file', file, file.name)\n        }\n\n        const { match: { params } } = this.props;\n        const id = params.id\n        const token = localStorage.getItem('token')\n        axios.post(`https://journal-nyx.herokuapp.com/api/v1/journals/${id}`, fd, {\n            headers: {\n                Authorization: `Bearer ${token}`\n            }\n        }).then(response => {\n            console.log(response)\n            if (response.data.status === \"success\") {\n                console.log('Journal updated successfully')\n            } else {\n                console.log('Could not update journal entry.');\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    handleDestroy = () => {\n        const { match: { params } } = this.props;\n        const id = params.id\n        const token = localStorage.getItem('token')\n        axios({\n            method: 'POST',\n            url: `https://journal-nyx.herokuapp.com/api/v1/journals/${id}/delete`,\n            'headers': {\n                'Content-Type': 'application/json',\n                Authorization: `Bearer ${token}`\n            },\n        }).then(response => {\n            if (response.data.status === \"success\") {\n                console.log('Journal deleted successfully')\n            } else {\n                console.log('Could not delete journal entry.');\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    componentDidMount() {\n        const { match: { params } } = this.props;\n        const id = params.id\n        const token = localStorage.getItem('token')\n\n        axios({\n            method: 'GET',\n            url: `https://journal-nyx.herokuapp.com/api/v1/journals/${id}`,\n            headers: {\n                Authorization: `Bearer ${token}`\n            },\n        }).then(response => {\n\n            if (response.data.status === \"success\") {\n                this.setState({\n                    id: response.data.journal.id,\n                    created_at: response.data.journal.created_at,\n                    updated_at: response.data.journal.updated_at,\n                    user_id: response.data.journal.user_id,\n                    title: response.data.journal.title,\n                    content: response.data.journal.content,\n                    url: 'https://s3.amazonaws.com/journal-nyx/' + response.data.journal.image_path\n                })\n            } else {\n                console.log('Could not retrieve journals. Please check authorization.');\n            }\n        }).catch(error => {\n            console.log(error);\n        })\n    }\n\n    render() {\n        const { created_at, updated_at, title, content, file, url } = this.state\n        return (\n            <>\n                <AvForm onValidSubmit={this.handleUpdate} id=\"update\">\n                    <AvField placeholder={title} name=\"title\" value={title} onChange={this.handleInput} id=\"title\" type=\"text\" validate={{\n                        required: { value: true, errorMessage: 'Please give your journal a title' },\n                        maxLength: { value: 255, errorMessage: 'Your title cannot exceed 255 characters' }\n                    }} />\n                    <textarea placeholder={content} name=\"content\" value={content} onChange={this.handleInput} id=\"content\" type=\"text\" className=\"form-control\"></textarea>\n                    <br />\n                    <p id=\"created-at\">Created at: {created_at}</p>\n                    <p id=\"updated-at\">Updated at: {updated_at}</p>\n                    <br /><br />\n                    <div className=\"input-group col-sm-6\">\n                        <input type=\"file\" className=\"custom-file-input\" id=\"file\" onChange={this.handleFile} />\n                        <label className=\"custom-file-label\" htmlFor=\"file\">{(file) ? file.name : \"Current image in preview\"}</label>\n                    </div>\n                    <br />\n                    <img src={url} alt=\"\" className=\"img-thumbnail\" />\n                    <br /><br />\n                    <Button light color=\"secondary\" form=\"update\" type=\"submit\" className=\"float-right\">Save your changes</Button>\n                    <Button outline color=\"secondary\" onClick={this.handleDestroy} id=\"delete-button\" className=\"float-right\">Delete</Button>\n                </AvForm>\n            </>\n        )\n    }\n}\n","import React from 'react';\nimport wallpaper from '../images/bg-2.jpg';\nimport { Container, Col } from 'reactstrap';\n\nexport default class Homepage extends React.Component {\n    render() {\n        return (\n            <Container className=\"m-0 p-0\" id=\"home-container\">\n                <Col className=\"p-0\">\n                    <img src={wallpaper} alt=\"\" id=\"home-bg\" className=\"position-relative w-100 h-100\" />\n                    <p id=\"home-text\" className=\"position-absolute\">Capture the journey within</p>\n                </Col>\n            </Container>\n        )\n    }\n}","import './App.css';\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport UserPage from './pages/UserPage';\nimport NewJournal from './pages/NewJournal';\nimport Navbar from './containers/navbar';\nimport UpdateJournal from './pages/UpdateJournal';\nimport Homepage from './pages/Homepage'\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <Navbar />\n        <Route path=\"/\" exact component={Homepage} />\n        <Route path=\"/journals\" exact component={UserPage} />\n        <Route path=\"/journals/new\" component={NewJournal} />\n        <Route path=\"/journals/:id(\\d+)\" component={UpdateJournal} />\n      </>\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}